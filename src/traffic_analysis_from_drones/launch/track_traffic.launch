<launch>
    <!-- System configuration parameters -->
    <arg name="multitrackernode" default="multi_tracker"/>
    <arg name="homographyouttopic" default="/homography_output"/>
    <arg name="multitrackedframestopic" default="/$(arg multitrackernode)/tracked_frames"/>
    <arg name="pretrackedframestopic" default="/$(arg multitrackernode)/pretracked_frames"/>
    <arg name="eventstopic" default="/$(arg multitrackernode)/global_events"/>
    <arg name="statustopic" default="/$(arg multitrackernode)/status"/>
    <arg name="windowtopic" default="/$(arg multitrackernode)/window"/>
    <arg name="kalmantopic" default="/$(arg multitrackernode)/pos"/>
    <arg name="objectminarea" default="500"/>
    <arg name="lostattempts" default="10"/>
    <arg name="maxtrackedobjects" default="30"/>
    <arg name="overlapmargin" default="15"/>
    <arg name="cropleft" default="500"/>
    <arg name="cropright" default="1405"/>
    <arg name="croptop" default="300"/>
    <arg name="cropbottom" default="500"/>
    <arg name="blurksize" default="11"/>
    <arg name="windowmaxwidth" default="50"/>
    <arg name="maskpath" default="$(find traffic_analysis_from_drones)/python/mask.png"/>

    <arg name="kalmannode" default="rt_kalman_filter"/>
    <arg name="dtprediction" default="0.05"/>
    <arg name="outframestopic" default="/out"/>

	<!-- Open an image visualizer that can listen on various image topics -->
    <node name="visualizer" pkg="rqt_image_view" type="rqt_image_view" args="/hej"/>

	<!-- Publish frames from the traffic video on a ros topic -->
	<node name="video_frame_publisher" pkg="video_stream" type="video_publisher.py" 
		args="--video_source '$(find traffic_analysis_from_drones)/data/traffic_video_dyrskuepladsen.mp4' --framerate 10"/>

	<!-- Connect the subscriber for the image_raw topic with the data on the /video_frame topic -->
	<remap to="/video_stream_output" from="image_raw"/>

	<!-- Stabilize the video -->
	<node name="stabilizer" pkg="video_stabilizer_node" type="stabilizer.py" />

	<!-- Map stabilizer to homography package -->
    <!--<remap to="/stabilized_frame" from="/homography_output"/>-->

	<!-- Do homography transformation -->

	<!-- Map Homography to tracker package -->
    <!--<remap to="/homography_output" from="tracker_input"/>-->

	<!-- Visual multi tracker -->
	<node name="visual_tracker" pkg="traffic_analysis_from_drones" type="visual_tracker.py" args="-n $(arg multitrackernode) -i /stabilized_frame -o $(arg multitrackedframestopic) --pre-tracked-frames-topic $(arg pretrackedframestopic) --events-topic $(arg eventstopic) --status-topic $(arg statustopic) --window-topic $(arg windowtopic) --kalman-topic $(arg kalmantopic) --object-min-area $(arg objectminarea) --lost-attempts $(arg lostattempts) --max-tracked-objects $(arg maxtrackedobjects) --overlap-margin $(arg overlapmargin) --crop-left $(arg cropleft) --crop-right $(arg cropright) --crop-top $(arg croptop) --crop-bottom $(arg cropbottom) --blur-ksize $(arg blurksize) --window-max-width $(arg windowmaxwidth) --mask-path $(arg maskpath)" output="screen"/>

    <!-- Car tracker node -->
    <node name="car_tracker" pkg="traffic_analysis_from_drones" type="kalman_car_tracker.py" args="-n $(arg kalmannode) --events-topic $(arg eventstopic) --status-topic $(arg statustopic) --window-topic $(arg windowtopic) --kalman-topic $(arg kalmantopic) --max-tracked-objects $(arg maxtrackedobjects) --dt-prediction $(arg dtprediction)" output="screen"/> 

</launch>
